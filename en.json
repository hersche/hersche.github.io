{
    "index": {
        "title": "Linklist + about site and projects",
		"preword":"This is the linklist, or alternative home. Sitemap would may be a good name, but it contains 'external' links too. <br /> It contains also a description about the website and my in context to my projects.",
        "description": "TEXT IS UNDER CONSTRUCTION! This is a little link-collection.<br /> It is using your webstorage to provide this site also offline when supported by your browser. <br />This site is very current and i will update it and try to learn something about this relative new HTML5-Stuff. Also javascript is really new to me, but it's a funny world. Not a 'secure' language or so, but funny and sometimes usefull (see map-plugin in Peta). <br />On the other site i like some more serious and mostly OOP and MVC-Structred Code. On this site you could became a overview of the projects, which exists out of this. I see a important point in security for my applications, so 2 of the Projects got encryption too. The last is written in PHP and is not encrypted in db yet - but this will follow, as i find time. It will look similiar implemented to the other projects. <br /> The last part is about me. I like to have some money too and have done a education as applicationdeveloper. After education i worked by body, cause 4 years 8 hours a day computer was too much! Now i broke my feet, and wanted to do something - i never really ended programming (just reduced a lot!), but since April, as you could see on github, i'm really active again! I dont want donations, this should be a example, in which direction i could develop.<br /> You could use them freely and i'm happy when someone fork or contribute it  <br />Also Bugreportings are nice (then i see work's not unused :))" 
        ,
        "content": {
            "tryToxic": {
                "pLink": "index.html?s=tryToxic",
                "sLink": "https://github.com/skamster/tryToxics/",
                "dLink": "tryToxicDocs/index.html",
                "stable": "Unshure (API changes very fast, since heavy development in core)"
            },
            "jobManagement": {
                "pLink": "index.html?s=jobManagement",
                "sLink": "https://github.com/skamster/jobManagement/",
                "dLink": "jobManagementDocs/index.html",
                "stable": "Basicly stable, paused"
            },
            "peta": {
                "pLink": "index.html?s=peta",
                "sLink": "https://github.com/skamster/Peta/",
                "dLink": "petaDocs/index.html",
                "stable": "Heavy development, but basicly stable"
            }

        }
    },
    "tryToxic": {
        "title": "tryToxic",
        "preword": "tryToxic is just another tox-api-client, written in python 3 and pyQt",
        "description": "The history of tryToxic is a short one - there was a binding to tox in python and my interesst was big enough. So first parts where created into <a href='index.html?s=jobManagement'>jobManagement</a>, called toxTry. It's now proper separeted, and got it's name cause it never will be a official client (instead, it's QtTox, written in C++). What to say further? It's easy designed, you should get a overview quick..",
        "features": {
            "Local encryption": "Store every personal related information encrypted on harddisk",
            "Groupchats": "Invite and create groupchats",
            "Set Loglevel": "Change the level in runtime",
            "i18n": "It's prepared for every language!"
        },
        "bugs": {
            "Filetransfer": "Sending fails, while recive is working",
            "Others": "undetected"
        },
        "pictures": {
            "initview": {
                "desc": "Initview",
                "src": "images/tryToxicInit.png",
                "link": "http://www.imghack.se/155968"
            },
            "detailcompanyview": {
                "desc": "Chatview in german",
                "src": "images/tryToxicChat.png",
                "link": "http://www.imghack.se/155969"
            }
        }
    },
    "jobManagement": {
        "title": "jobManagement",
        "preword": "Semantic job-overview when you work diffrent companys (freelance/temporary worker). Written in python3 using pyQt and pyCrypto.",
        "description": "As i begann to work as stagehand, there was often a untrusty atmosphere to the companys. So i came to the idea to do a finance-system to check my companys payings. I'm not a big finance-head, but it was and still is good useable. It's definently not designed for classic finance management!",
        "features": {
            "Local encryption": "Store messages and idendity encrypted on harddisk",
            "Diffrent companys": "When you work for diffrent companys",
            "Set Loglevel": "Change in working app",
            "i18n": "It's prepared for every language!"
        },
        "bugs": {
            "Generating charts": "They're very unflexible",
            "Others": "undetected"
        },
        "pictures": {
            "initview": {
                "desc": "Initview",
                "src": "images/jobManagementDataInit.png",
                "link": "images/jobManagementDataInit.png"
            },
            "detailcompanyview": {
                "desc": "Companyview",
                "src": "images/jobManagementDetailComapnyView.png",
                "link": "images/jobManagementDetailComapnyView.png"
            }
        }
    },
    "Peta": {
        "title": "Peta",
        "preword": "The name Peta came out of PHPMeta. Itâ€™s basicly written in PHP with the use of smarty (template/.tpl-files) and dojo (Javascript). The idea behind this project is to avoid redundant rewrites. A maingoal is a good structure, where the administrator of a system could change things as he need. It's target is a base for everything.",
        "description": "I think every webmaster know this a little bit - when you want to have a really nice system, then you have to use systemS (multiple wordpresses for example). When you have to fix something then, you have to do this on every single instance/installation. My idea is, to avoid those redundant stuff - basicly you could do a blog, gallery or whatelse, separeted, but same code, for family, friends and publics.. or all the same in one time!",
        "features": {
            "Usermanagement": "A rightsystem, login, etc. One user could have one to n instances",
            "Flexible pluginsystem": "Every plugin could have one to n instances",
            "Flexible accesssystem": "Every user have one to n roles. Every instanced plugin has one to n roles with a r/rw/admin-right.",
            "MVC-Structure": "It's easy to learn the code or write a plugin, since there's a separation between model, view and controller.",
            "Livedemo": "<a href='http://dev.thoeni.me/peta'>PETA LIVEDEMO</a>"
        },
        "bugs": {
            "Update accessrights": "Set ar fails on update, so rm and touch the role again!",
            "Others": "undetected"
        },
        "pictures": {
            "php": {
                "desc": "Powered by PHP",
                "src": "http://www.php.net/images/logos/php-power-black.gif",
                "link": "http://www.php.net/"
            }
        }
    },

    "about": {
	"title":"About me",
        "description": "Hello <br /> Right now i've no idea for a good description about me - TEXT IS IN DEVELOPMENT!",
        "picture": "profile.jpg",
        "contact": {
            "Xampp": "skamster@jabber.ccc.de",
            "E-Mail": "hersche@vmail.me",
            "Diaspora": "<a href='https://nerdpol.ch/u/hersche'>hersche@nerdpol.ch</a>"
        },
        "Other expiriences":{
	    "Support":{
	    "desc":"I support diffrent people since more than 6 years in assistance with linux, mostly <a href='http://kubuntu.org'>Kubuntu</a>",
	    "reference":{
	      "ex-Name":"Usage of person",
	      "name 2":"another ussage"
	      }
	    }
	},
        "languages": {
            "PHP": {
                "desc": "Use this for 10 years. Since Oop is default with PHP5, it's beatiful to use. Before it was horrible, but not for me (i didn't know oop in the beginn)",
                "frameworks": {
                    "Smarty": "A templateframework, allow a clean separation between 'controller' and 'view'. Smarty make <a href='https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller'>MVC</a> really easy!"
                }
            },
            "Python": {
                "desc": "I know python since 5 years and it addict me really fast. Perfect possibilitys of sequentell, Oop and modulare code. It also don't use { }, but forces you to format your code proper. Top!",
                "frameworks": {
                    "Urllib2":"This is a nice framwork to 'speak' with websites, which doesn't get a daemon. Just go to a field, put input in and submit - in python, not in browser. That way you could do a lot automatic, unimportant the hoster like it or not",
                    "PyQt || PyKde": "Qt is a very modular ui-library - it's easy to use and works very stable. This is one of the first frameworks i used.",
                    "PyTox": "PyTox is a interface to the tox-core-project. The whole project is in heavy development. For further information visit <a href='http://tox.im'>tox.im</a>.",
                    "PyCrypto": "PyCrypto supports many kinds of hashing, symmetric and asymmetric encryptions. My focus is on symmetric encryptions. I use it to encrypt local data"
                }
            },
                "Java": {
                    "desc": "Learned this language at education. JVM was/is a really bloating runtime, what i dislike. It's strictly needed Oop-kind was nice for learning. Because android is growing very much and dalvik gets to be very optimized, it looking attractive again.",
                    "frameworks": {
                        "Groovy & grails": "Similiar to ruby and rails. Groovy is a more simple language and grails is a great framework! Both are based on Java"
                    }
                },
                "Javascript": {
                    "desc": "In past (10-12 years), this language was a example why you should do mostly pure html (maybe good for detecting the user's language, but nothing like ajax or forms out of js) sites. So much incompatibility between browsers and security-issues! Today, this changed, a lot of stuff is default, there are mighty js-frameworks and there came html5 which use js in combination. Look the source of this page ;)",
                    "frameworks": {
                        "jQuery": "jQuery is very famous library. Today it's nearly a defacto-default.",
                        "Dojo": "Dojo's is a very large framework with support for many many things, such as ui, parsing, processing, ajax, etc. 12mb of very advanced stuff!",
                        "Letleaf":"This library is very new for me. It is perfect for google-like maps (at least zoom and mark pois), but based on the openstreetmap-project. I really preferr the tiles from osm, cause they're free and often more detailed."
                    }
                }
            }
        }
    }
